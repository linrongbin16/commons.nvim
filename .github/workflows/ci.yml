name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true
jobs:
  commits:
    name: Commits
    if: ${{ github.ref != 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: JohnnyMorganz/stylua-action@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
          args: --config-path .stylua.toml ./lua ./spec
      - name: Add _json.lua
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          echo "pwd"
          echo $PWD
          git clone --depth=1 https://github.com/actboy168/json.lua.git ~/.json.lua
          cp ~/.json.lua/json.lua ./lua/commons/_json.lua
      - name: Add _system.lua
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          echo "pwd"
          echo $PWD
          git clone --depth=1 https://github.com/neovim/neovim.git ~/.neovim
          cp ~/.neovim/runtime/lua/vim/_system.lua ./lua/commons/_system.lua
          sed -i 's/vim.uv/vim.uv or vim.loop/g' ./lua/commons/_system.lua
      - name: Add async.lua
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          echo "pwd"
          echo $PWD
          git clone --depth=1 https://github.com/lewis6991/async.nvim.git ~/.async
          cp ~/.async/lua/async.lua ./lua/commons/async.lua
          sed -i '1 i\---@diagnostic disable: luadoc-miss-module-name, undefined-doc-name' ./lua/commons/async.lua
      - name: Add promise.lua
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          echo "pwd"
          echo $PWD
          git clone --depth=1 https://github.com/notomo/promise.nvim.git ~/.promise
          rm -rf ./lua/commons/promise
          cp -rf ~/.promise/lua/promise ./lua/commons/
          sed -i '1 i\---@diagnostic disable: inject-field, undefined-field' ./lua/commons/promise/init.lua
      - name: Add micro-async.lua
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          echo "pwd"
          echo $PWD
          git clone --depth=1 https://github.com/willothy/micro-async.nvim ~/.micro-async
          rm -rf ./lua/commons/micro-async
          cp -rf ~/.micro-async/lua/micro-async ./lua/commons/
          find ./lua/commons/micro-async -type f -name '*.lua' -exec sed -i 's/"micro-async/"commons.micro-async/g' {} \;
          sed -i '1 i\---@diagnostic disable: undefined-doc-name' ./lua/commons/micro-async/lsp.lua
      - name: Add color.hsl.lua
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          echo "pwd"
          echo $PWD
          curl -k -L http://sputnik.freewisdom.org/files/colors-8.05.26.tar.gz -o ~/.colors.tar.gz
          tar zxf ~/.colors.tar.gz
          echo 'ls -lh'
          ls -lh
          rm -rf ./lua/commons/color/hsl.lua
          cp -rf ./colors-8.05.26/lua/colors.lua ./lua/commons/color/hsl.lua
          rm -rf ./colors-8.05.26
          sed -i '1 i\---@diagnostic disable: lowercase-global' ./lua/commons/color/hsl.lua
      - uses: cargo-bins/cargo-binstall@main
      - name: Selene
        run: |
          cargo binstall --no-confirm selene
          selene --config selene.toml ./lua
      - uses: stevearc/nvim-typecheck-action@v1
        with:
          path: lua
          level: Information
          configpath: ".luarc.json"
          neodev-version: stable
      - uses: stefanzweifel/git-auto-commit-action@v4
        if: ${{ github.ref != 'refs/heads/main' }}
        with:
          commit_message: "chore(pr): auto-commit"
          push_options: "--force"
  windows_unit_test:
    name: Windows Test
    needs:
      - lint
    strategy:
      matrix:
        nvim_version: [stable]
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: notomo/action-setup-nvim-lua@v1
      - uses: rhysd/action-setup-vim@v1
        id: vim
        with:
          neovim: true
          version: ${{ matrix.nvim_version }}
      - name: Run Test Cases
        run: |
          luarocks --lua-version=5.1 install vusted
          vusted ./spec
  unix_unit_test:
    name: Unxi Test
    needs:
      - lint
    strategy:
      matrix:
        nvim_version: [stable, nightly, v0.6.0, v0.7.0]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: rhysd/action-setup-vim@v1
        id: vim
        with:
          neovim: true
          version: ${{ matrix.nvim_version }}
      - uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "luajit-2.1.0-beta3"
      - uses: leafo/gh-actions-luarocks@v4
      - name: Run Test Cases
        run: |
          luarocks install vusted
          vusted --shuffle ./spec
  code_coverage:
    name: Code Coverage
    needs:
      - lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: rhysd/action-setup-vim@v1
        id: vim
        with:
          neovim: true
          version: stable
      - uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "luajit-2.1.0-beta3"
      - uses: leafo/gh-actions-luarocks@v4
      - name: Generate Coverage Reports
        shell: bash
        run: |
          luarocks install luacov
          luarocks install vusted
          vusted --coverage ./spec
      - name: Check Coverage Reports
        shell: bash
        run: |
          echo "ls ."
          ls -l .
          echo "run luacov"
          luacov
          echo "ls ."
          ls -l .
          echo "cat ./luacov.report.out"
          cat ./luacov.report.out
      - uses: codecov/codecov-action@v3
        with:
          files: luacov.report.out
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  release:
    name: Release
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - unix_unit_test
      - windows_unit_test
      - code_coverage
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: simple
          package-name: commons.nvim
          changelog-path: docs/CHANGELOG.md
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"perf","section":"Performance","hidden":false},{"type":"refactor","section":"Miscellaneous","hidden":false},{"type":"test","section":"Miscellaneous","hidden":false},{"type":"deprecate","section":"Deprecated","hidden":false},{"type":"break","section":"Break Changes","hidden":false},{"type":"ci","section":"Continuously Integration","hidden":false}]'
      - uses: actions/checkout@v4
      - uses: rickstaa/action-create-tag@v1
        if: ${{ steps.release.outputs.release_created }}
        with:
          tag: stable
          message: "Current stable release: ${{ steps.release.outputs.tag_name }}"
          tag_exists_error: false
          force_push_tag: true
      - uses: nvim-neorocks/luarocks-tag-release@v5
        if: ${{ steps.release.outputs.release_created }}
        env:
          LUAROCKS_API_KEY: ${{ secrets.LUAROCKS_API_KEY }}
        with:
          version: ${{ steps.release.outputs.tag_name }}
          labels: |
            neovim
            vim
